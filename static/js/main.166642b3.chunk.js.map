{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["spotifyApi","SpotifyWebApi","App","token","getHashParams","access_token","setAccessToken","state","loggedIn","header","view","currentAlbum","currentAritst","currentPlaylist","currentSearchTerm","currentTop","currentTopTime","currentUser","getCurrentUser","handleHeaderChange","bind","handlePlaylistChange","handleArtistChange","handleTopChange","handleSearchChange","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getMe","then","data","setState","title","this","playlist","name","artist","top","term","className","onHeaderChange","user","onPlaylistChange","onSearchChange","appState","onTopChange","Component","LoginButton","length","text","possible","i","charAt","Math","floor","random","generateRandomString","url","encodeURIComponent","href","SideMenu","map","item","key","props","onClick","renderSideMenu","UserPlaylists","userPlaylists","renderPlaylists","getUserPlaylists","id","limit","playlists","items","catch","err","console","error","TrackSearch","searchTerm","updateSearchTerm","target","value","onSubmit","onChange","type","placeholder","UserDetails","src","images","alt","display_name","MainHeader","currentArtist","owner","tracks","total","style","display","MainView","Fragment","TopSelect","hidden","TopList","AlbumList","userAlbums","renderAlbums","getMySavedAlbums","album","artists","ArtistList","visible","renderArtists","artistList","getMyTopArtists","time_range","getFollowedArtists","getArtistRelatedArtists","SongList","songs","renderSongs","songList","getMyTopTracks","getMyRecentlyPlayedTracks","getMySavedTracks","searchTracks","getPlaylistTracks","getTrack","song","track","ms","minutes","seconds","toFixed","msToMinutesAndSeconds","duration_ms","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.166642b3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport './App.css';\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    const params = this.getHashParams();\r\n    const token = params.access_token;\r\n    if (token) {\r\n      spotifyApi.setAccessToken(token);\r\n    }\r\n    \r\n    this.state = {\r\n      loggedIn: token ? true : false,\r\n      header: \"Recently Played\",\r\n      view: \"\",\r\n      currentAlbum: null,\r\n      currentAritst: null,\r\n      currentPlaylist: null,\r\n      currentSearchTerm: \"\",\r\n      currentTop: \"medium_term\",\r\n      currentTopTime: \"6 Months\",\r\n      currentUser: null,\r\n    };\r\n\r\n    this.getCurrentUser();\r\n    this.handleHeaderChange = this.handleHeaderChange.bind(this);\r\n    this.handlePlaylistChange = this.handlePlaylistChange.bind(this);\r\n    this.handleArtistChange = this.handleArtistChange.bind(this);\r\n    this.handleTopChange = this.handleTopChange.bind(this);\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n  }\r\n\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n    e = r.exec(q)\r\n    while (e) {\r\n       hashParams[e[1]] = decodeURIComponent(e[2]);\r\n       e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    spotifyApi.getMe().then(data => {\r\n      this.setState({\r\n        currentUser: data,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleHeaderChange(title) {\r\n    this.setState({ \r\n      header: title,\r\n      view: \"\",\r\n      currentPlaylist: null\r\n    });\r\n  }\r\n\r\n  handlePlaylistChange(playlist) {\r\n    this.setState({ \r\n      header: playlist.name,\r\n      view: \"playlist\",\r\n      currentPlaylist: playlist, \r\n    });\r\n  }\r\n\r\n  handleArtistChange(artist) {\r\n    this.setState({\r\n      header: artist.name,\r\n      view: \"Artist\",\r\n      currentAritst: artist,\r\n    });\r\n  }\r\n\r\n  handleTopChange(top) {\r\n    const time = {\r\n     'short_term' : '4 Weeks',\r\n     'medium_term' : '6 Months',\r\n     'long_term' : 'All Time',\r\n    }\r\n\r\n    this.setState({\r\n      currentTop: top,\r\n      view: \"top\",\r\n      currentTopTime: time[top],\r\n    });\r\n  }\r\n\r\n  handleSearchChange(term) {\r\n    this.setState({\r\n      header: 'Search Results',\r\n      view: \"results\",\r\n      currentSearchTerm: term,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"app-container\">\r\n          { !this.state.loggedIn && <LoginButton/> }\r\n          { this.state.loggedIn && this.state.currentUser !== null && (\r\n            <div>\r\n              <div className=\"left-side-section\">\r\n                <SideMenu header={this.state.header} onHeaderChange={this.handleHeaderChange}/>\r\n                <UserPlaylists user={this.state.currentUser} onPlaylistChange={this.handlePlaylistChange}/>\r\n              </div>\r\n              <div className=\"main-section\">\r\n                <div className=\"header\">\r\n                  <TrackSearch onSearchChange={this.handleSearchChange}/>\r\n                  <UserDetails currentUser={this.state.currentUser}/>\r\n                </div>\r\n                <div className=\"main-section-container\">\r\n                  <MainHeader appState={this.state} onTopChange={this.handleTopChange}/>\r\n                  <MainView appState={this.state}/>\r\n                </div>\r\n              </div>\r\n            </div> )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass LoginButton extends Component {\r\n  generateRandomString(length) {\r\n    var text = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  };\r\n\r\n  render() {\r\n    const client_id = 'e9a2306dd16a41838ce9cd3eb8cd72c5';\r\n    const redirect_uri = 'https://mendozatudares.github.io/spotimy/';\r\n    const state = this.generateRandomString(16);\r\n    const scope = 'user-read-private playlist-read-private playlist-read-collaborative user-library-read user-top-read user-read-recently-played user-follow-read';\r\n\r\n    var url = 'https://accounts.spotify.com/authorize';\r\n    url += '?response_type=token';\r\n    url += '&client_id=' + encodeURIComponent(client_id);\r\n    url += '&scope=' + encodeURIComponent(scope);\r\n    url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\r\n    url += '&state=' + encodeURIComponent(state);\r\n\r\n    return (\r\n      <a className=\"centered login-btn\" href={url}>\r\n        Login to Spotify\r\n      </a>\r\n    )\r\n  }\r\n}\r\n\r\nclass SideMenu extends Component {\r\n  renderSideMenu() {\r\n    const menu = [\"Recently Played\", \"Songs\", \"Albums\", \"Artists\", \"Top\"];\r\n    return menu.map(item => {\r\n      return (\r\n        <li key={item} className={this.props.header === item ? \"active side-menu-item\" : \"side-menu-item\"} onClick={() => this.props.onHeaderChange(item)}>\r\n            {item}\r\n        </li> \r\n      );\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"side-menu-container\">\r\n        <h3 className=\"user-library-header\">Your Library</h3>\r\n        {this.renderSideMenu()}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nclass UserPlaylists extends Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userPlaylists: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderPlaylists().then(data =>\r\n      this.setState({\r\n        userPlaylists: data\r\n      })\r\n    );\r\n  }\r\n\r\n  async renderPlaylists() {\r\n    const onPlaylistChange = (playlist) => this.props.onPlaylistChange(playlist);\r\n    \r\n    return spotifyApi.getUserPlaylists(this.props.user.id, { limit: 50 })\r\n      .then(function(playlists) {\r\n        return playlists.items.map(playlist => {\r\n          return (\r\n            <li key={playlist.name} className=\"side-menu-item\" onClick={() => onPlaylistChange(playlist)}>\r\n              {playlist.name}\r\n            </li>\r\n          );\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user-playlist-container\">\r\n        <h3 className=\"user-playlist-header\">Playlists</h3>\r\n        {this.state.userPlaylists}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass TrackSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchTerm: '',\r\n    };\r\n\r\n    this.updateSearchTerm = this.updateSearchTerm.bind(this);\r\n  }\r\n\r\n  updateSearchTerm(term) {\r\n    this.setState({\r\n      searchTerm: term.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"track-search-container\">\r\n        <form onSubmit={() => {this.props.onSearchChange(this.state.searchTerm)}}>\r\n          <input onChange={this.updateSearchTerm} type=\"text\" placeholder=\"Search\"/>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass UserDetails extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"user-details-container\">\r\n        <img className=\"user-image\" src={this.props.currentUser.images[0].url} alt={this.props.currentUser.display_name}/>\r\n        <p className=\"user-name\">{this.props.currentUser.display_name}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass MainHeader extends Component {\r\n  render() {\r\n    const header = this.props.appState.header;\r\n    const view = this.props.appState.view;\r\n    const currentArtist = this.props.appState.currentAritst;\r\n    const currentPlaylist = this.props.appState.currentPlaylist;\r\n    const currentTop = this.props.appState.currentTop;\r\n    const currentTopTime = this.props.appState.currentTopTime;\r\n\r\n    return (\r\n      <div className='section-title'>\r\n        {view === \"playlist\" && (\r\n          <div className='playlist-title-container'>\r\n            <div className='playlist-image-container'>\r\n              <img className='playlist-image' src={currentPlaylist.images[0] ? currentPlaylist.images[0].url : null} alt={currentPlaylist.name}/>\r\n            </div>\r\n            <div className='playlist-info-container'>\r\n              <p className='playlist-text'>PLAYLIST</p>\r\n              <h3 className='header-title'>{header}</h3>\r\n              <p className='created-by'>Created by <span className='lighter-text'>\r\n                {currentPlaylist.owner.display_name}</span> - {currentPlaylist.tracks.total} songs\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {view === \"artist\" && currentArtist && (\r\n          <div>\r\n            <div className='current-artist-header-container'>\r\n              <img className='current-artist-image' src={currentArtist.images[0].url} alt={currentArtist.name}/>\r\n              <div className='current-artist-info'>\r\n                <p>Artist</p>\r\n                <h3>{currentArtist.name}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {(\r\n          header === 'Top'||\r\n          header === 'Songs'||\r\n          header === 'Recently Played' ||\r\n          header === 'Albums' ||\r\n          header === 'Artists' ||\r\n          header === 'Search Results' ) && (\r\n          <div style={{display: 'flex'}}>\r\n            <h3 className='header-title'>{header}</h3>\r\n            {header === 'Top' && <TopSelect currentTop={currentTop} currentTopTime={currentTopTime} onTopChange={this.props.onTopChange}/>}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass MainView extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.appState.header === \"Top\" && <TopList appState={this.props.appState}/>}\r\n        {this.props.appState.header === \"Artists\" && <ArtistList appState={this.props.appState}/>}\r\n        {this.props.appState.header === \"Albums\" && <AlbumList/>}\r\n        {(\r\n          this.props.appState.header === \"Recently Played\" ||\r\n          this.props.appState.header === \"Songs\" ||\r\n          this.props.appState.header === \"Search Results\" ||\r\n          this.props.appState.view === \"playlist\" )\r\n          && <SongList appState={this.props.appState}/>}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass TopSelect extends Component {\r\n  render() {\r\n    const currentTop = this.props.currentTop;\r\n    return (\r\n      <div>\r\n        <select onChange={(value) => this.props.onTopChange(value.target.value)}>\r\n          <option hidden >{this.props.currentTopTime}</option>\r\n          {currentTop !== 'short_term' && <option value='short_term'>4 Weeks</option>}\r\n          {currentTop !== 'medium_term' && <option value='medium_term'>6 Months</option>}\r\n          {currentTop !== 'long_term' && <option value='long_term'>All Time</option>}\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass TopList extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ArtistList appState={this.props.appState}/>\r\n        <SongList appState={this.props.appState}/>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nclass AlbumList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userAlbums: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderAlbums().then(data =>\r\n      this.setState({\r\n        userAlbums: data,\r\n      })\r\n    );\r\n  }\r\n\r\n  async renderAlbums() {\r\n    return spotifyApi.getMySavedAlbums({ limit: 50 })\r\n      .then(function(data) {\r\n        return data.items.map(item => {\r\n          const getAlbum = () => {\r\n            // noop\r\n          }\r\n\r\n          return (\r\n            <li key={item.album.id} className=\"album-item\" onClick={getAlbum}>\r\n              <div className=\"album-image\">\r\n                <img src={item.album.images[0].url} alt={item.album.name}/>\r\n              </div>\r\n              <div className=\"album-details\">\r\n                <p className=\"album-name\">{item.album.name}</p>\r\n                <p className=\"artist-name\">{item.album.artists[0].name}</p>\r\n              </div>\r\n            </li>\r\n          );\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    return <ul className=\"album-view-container\">{this.state.userAlbums}</ul>;\r\n  }\r\n}\r\n\r\nclass ArtistList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      artists: [],\r\n    }\r\n    this.visible = false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderArtists().then(data =>\r\n      this.setState({\r\n        artists: data,\r\n      })\r\n    );\r\n    this.visible = true\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.visible && \r\n      ((this.props.appState.header === 'Top' && this.state.currentTop !== this.props.appState.currentTop) ||\r\n        this.props.appState.header !== this.state.header))\r\n      this.renderArtists().then(data => {\r\n        this.setState({\r\n          header: this.props.appState.header,\r\n          currentTop: this.props.appState.currentTop,\r\n          artists: data,\r\n        })\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.visible = false\r\n  }\r\n\r\n  async renderArtists() {\r\n    const artistList = this.artistList;\r\n\r\n    switch (this.props.appState.header) {\r\n      case (\"Top\"):\r\n        return spotifyApi.getMyTopArtists({ limit: 50, time_range: this.props.appState.currentTop })\r\n          .then(function(data) {\r\n            return artistList(data.items);\r\n          })\r\n          .catch(function(err) {\r\n            console.error(err);\r\n            return [];\r\n          });\r\n      case (\"Artists\"):\r\n        return spotifyApi.getFollowedArtists({ limit: 50})\r\n          .then(function(data) {\r\n            return artistList(data.artists.items)\r\n          })\r\n          .catch(function(err) {\r\n            console.error(err);\r\n            return [];\r\n          });\r\n      default:\r\n        return spotifyApi.getArtistRelatedArtists(this.props.appState.currentAritst.id, { limit: 5 })\r\n          .then(function(data) {\r\n            return artistList(data.artists)\r\n          })\r\n          .catch(function(err) {\r\n            console.error(err);\r\n            return [];\r\n          });\r\n    }\r\n  }\r\n\r\n  artistList(artists) {\r\n    return artists.map(artist => {\r\n      const getArtist = () => {\r\n        //noop\r\n      }\r\n      return (\r\n        <li key={artist.id} className=\"artist-item\" onClick={getArtist}>\r\n            <div className=\"artist-image\">\r\n              <img src={artist.images[0] ? artist.images[0].url : \"\"} alt={artist.name}/>\r\n            </div>\r\n            <div className=\"artist-details\">\r\n              <p>{artist.name}</p>\r\n            </div>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"artist-view-container\">\r\n        {this.state.artists}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nclass SongList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      songs: [],\r\n    }\r\n    this.visible = false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderSongs().then(data => {\r\n      this.setState({\r\n        header: this.props.appState.header,\r\n        currentTop: '',\r\n        currentSearchTerm: '',\r\n        songs: data,\r\n        visible: true,\r\n      })\r\n    });\r\n    this.visible = true\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.visible && \r\n        ((this.props.appState.header === 'Top' && this.state.currentTop !== this.props.appState.currentTop) ||\r\n         (this.props.appState.header === 'Search Results' && this.state.currentSearchTerm !== this.props.appState.currentSearchTerm) ||\r\n          this.props.appState.header !== this.state.header))\r\n      this.renderSongs().then(data => {\r\n        this.setState({\r\n          header: this.props.appState.header,\r\n          currentTop: this.props.appState.currentTop,\r\n          currentSearchTerm: this.props.appState.currentSearchTerm,\r\n          songs: data,\r\n        })\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.visible = false\r\n  }\r\n\r\n  async renderSongs() {\r\n    const currentUser = this.props.appState.currentUser;\r\n    const currentPlaylist = this.props.appState.currentPlaylist;\r\n    const currentSearchTerm = this.props.appState.currentSearchTerm;\r\n    const songList = (items) => this.songList(items);\r\n\r\n    switch (this.props.appState.header) {\r\n      case (\"Top\"):\r\n        return spotifyApi.getMyTopTracks({ limit: 50, time_range: this.props.appState.currentTop })\r\n          .then(function(data) {\r\n            return songList(data.items);\r\n          })\r\n          .catch(function(err) {\r\n            console.error(err);\r\n            return [];\r\n          })\r\n      case (\"Recently Played\"):\r\n        return spotifyApi.getMyRecentlyPlayedTracks({ limit: 50 })\r\n          .then(function(data) {\r\n            return songList(data.items);\r\n          })\r\n          .catch(function(err) {\r\n            console.error(err);\r\n            return [];\r\n          })\r\n      case (\"Songs\"):\r\n        return spotifyApi.getMySavedTracks({ limit: 50 })\r\n          .then(function (data) {\r\n            return songList(data.items);\r\n          })\r\n          .catch(function(err) {\r\n            console.error(err);\r\n            return [];\r\n          })\r\n      case (\"Search Results\"):\r\n        return spotifyApi.searchTracks(currentSearchTerm, { limit: 25 })\r\n          .then(function(data) {\r\n            return songList(data.tracks.items);\r\n          })\r\n      default: {\r\n        if (this.props.appState.view === \"playlist\") {\r\n          return spotifyApi.getPlaylistTracks(currentUser.id, currentPlaylist.id)\r\n            .then(function(data) {\r\n              return songList(data.items);\r\n            })\r\n            .catch(function(err) {\r\n              console.error(err);\r\n              return [];\r\n            })\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n  songList(items) {\r\n    const getTrack = (this.props.appState.header === \"Top\" || this.props.appState.header === \"Search Results\") ? \r\n      (song) => { return song; } : (song) => { return song.track; };\r\n\r\n    return items.map((song, i) => {\r\n      const msToMinutesAndSeconds = (ms) => {\r\n        const minutes = Math.floor(ms / 60000);\r\n        const seconds = ((ms % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n      }\r\n\r\n      return (\r\n      <li key={i} className=\"user-song-item\">\r\n        <div className=\"song-title\">\r\n          <p>{getTrack(song).name}</p>\r\n        </div>\r\n        <div className=\"song-artist\">\r\n          <p>{getTrack(song).artists[0].name}</p>\r\n        </div>\r\n        <div className=\"song-album\">\r\n          <p>{getTrack(song).album.name}</p>\r\n        </div>\r\n        <div className=\"song-length\">\r\n          <p>{msToMinutesAndSeconds(getTrack(song).duration_ms)}</p>\r\n        </div>\r\n      </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"song-header-container\">\r\n          <div className=\"song-title-header\">\r\n            <p>Title</p>\r\n          </div>\r\n          <div className=\"song-artist-header\">\r\n            <p>Aritst</p>\r\n          </div>\r\n          <div className=\"song-album-header\">\r\n            <p>Album</p>\r\n          </div>\r\n          <div className=\"song-length-header\">\r\n            <p>Length</p>\r\n          </div>\r\n        </div>\r\n        {this.state.songs}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}